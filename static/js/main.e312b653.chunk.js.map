{"version":3,"sources":["PureReactSM/Counter.js","PureReactSM/CounterDisplay.js","PureReactSM/PureReactSM.js","CustomHooksSM/useCounter.js","CustomHooksSM/Counter.js","CustomHooksSM/CounterDisplay.js","CustomHooksSM/CustomHooksSM.js","ReduxThunkSM/Counter.js","ReduxThunkSM/CounterDisplay.js","ReduxThunkSM/ReduxThunkSM.js","ReduxThunkSM/reducer.js","ReduxSagaSM/saga.js","ReduxSagaSM/Counter.js","ReduxSagaSM/CounterDisplay.js","ReduxSagaSM/ReduxSagaSM.js","ReduxSagaSM/reducer.js","MobXSM/countManager.js","MobXSM/Counter.js","MobXSM/CounterDisplay.js","MobXSM/MobXSM.js","RxJSSM/useCounter.js","RxJSSM/Counter.js","RxJSSM/CounterDisplay.js","RxJSSM/RxJSSM.js","App.js","index.js"],"names":["Counter","props","onClick","increment","decrement","incrementAsync","decrementAsync","className","state","ReduxSagaSM","useState","setState","title","value","setTimeout","counterManager","delay","CustomHooksSM","count","counter","setCounter","useCounter","mapDispatchToProps","payload","type","dispatch","connect","undefined","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","action","applyMiddleware","ReduxThunk","CounterDisplay","watchIncrementAsync","watchDecrementAsync","rootSaga","setTimeoutPromise","ms","Promise","res","put","takeEvery","all","sagaMiddleware","createSagaMiddleware","run","makeAutoObservable","this","CounterView","observer","countManager","MobXSM","subject","BehaviorSubject","subscribe","next","useEffect","subscriber","unsubscribe","RxJSSM","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e312b653.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nexport default function Counter(props) {\r\n  return (\r\n    <div>\r\n      <button onClick={() => props.increment(1)}>Increment</button>\r\n      <button onClick={() => props.decrement(1)}>Decrement</button>\r\n      <button onClick={() => props.incrementAsync(1)}>Increment Async</button>\r\n      <button onClick={() => props.decrementAsync(1)}>Decrement Async</button>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function Counter(props) {\r\n  return <div className=\"count-value\">{props.state}</div>;\r\n}\r\n","import React from \"react\";\r\n\r\nimport { useState } from \"react\";\r\n\r\nimport Counter from \"./Counter\";\r\nimport CounterDisplay from \"./CounterDisplay\";\r\n\r\nconst initalState = 0;\r\nconst delay = 1500;\r\n\r\nexport default function ReduxSagaSM(props) {\r\n  const [state, setState] = useState(initalState);\r\n\r\n  const increment = (value) => {\r\n    setState((state) => state + value);\r\n  };\r\n\r\n  const decrement = (value) => {\r\n    setState((state) => state - value);\r\n  };\r\n\r\n  const incrementAsync = (value) => {\r\n    setTimeout(() => setState((state) => state + value), delay);\r\n  };\r\n\r\n  const decrementAsync = (value) => {\r\n    setTimeout(() => setState((state) => state - value), delay);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h3 className=\"flex\">{props.title}</h3>\r\n      <div className=\"flex\">\r\n        <Counter increment={increment} decrement={decrement} incrementAsync={incrementAsync} decrementAsync={decrementAsync} />\r\n        <CounterDisplay state={state} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import { useState } from \"react\";\r\n\r\nlet counterManager = {};\r\nconst delay = 1500;\r\n\r\nfunction useCounter(count = 0) {\r\n  const [counter, setCounter] = useState(count);\r\n\r\n  counterManager.increment = (value) => {\r\n    setCounter((state) => state + value);\r\n  };\r\n\r\n  counterManager.decrement = (value) => {\r\n    setCounter((state) => state - value);\r\n  };\r\n\r\n  counterManager.incrementAsync = (value) => {\r\n    setTimeout(counterManager.increment, delay, value);\r\n  };\r\n\r\n  counterManager.decrementAsync = (value) => {\r\n    setTimeout(counterManager.decrement, delay, value);\r\n  };\r\n\r\n  return counter;\r\n}\r\n\r\nexport { useCounter, counterManager };\r\n","import React from \"react\";\r\n\r\nexport default function Counter(props) {\r\n  return (\r\n    <div>\r\n      <button onClick={() => props.increment(1)}>Increment</button>\r\n      <button onClick={() => props.decrement(1)}>Decrement</button>\r\n      <button onClick={() => props.incrementAsync(1)}>Increment Async</button>\r\n      <button onClick={() => props.decrementAsync(1)}>Decrement Async</button>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function Counter(props) {\r\n  return <div className=\"count-value\">{props.state}</div>;\r\n}\r\n","import React from \"react\";\r\n\r\nimport { useCounter, counterManager } from \"./useCounter\";\r\n\r\nimport Counter from \"./Counter\";\r\nimport CounterDisplay from \"./CounterDisplay\";\r\n\r\nexport default function CustomHooksSM(props) {\r\n  const state = useCounter(0);\r\n\r\n  return (\r\n    <div>\r\n      <h3 className=\"flex\">{props.title}</h3>\r\n      <div className=\"flex\">\r\n        <Counter\r\n          increment={counterManager.increment}\r\n          decrement={counterManager.decrement}\r\n          incrementAsync={counterManager.incrementAsync}\r\n          decrementAsync={counterManager.decrementAsync}\r\n        />\r\n        <CounterDisplay state={state} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst delay = 1500;\r\n\r\nfunction Counter(props) {\r\n  return (\r\n    <div>\r\n      <button onClick={() => props.increment(1)}>Increment</button>\r\n      <button onClick={() => props.decrement(1)}>Decrement</button>\r\n      <button onClick={() => props.incrementAsync(1)}>Increment Async</button>\r\n      <button onClick={() => props.decrementAsync(1)}>Decrement Async</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  increment: (payload) => {\r\n    return {\r\n      type: \"INCREMENT\",\r\n      payload,\r\n    };\r\n  },\r\n\r\n  decrement: (payload) => {\r\n    return {\r\n      type: \"DECREMENT\",\r\n      payload,\r\n    };\r\n  },\r\n\r\n  incrementAsync: (payload) => {\r\n    return (dispatch) => {\r\n      setTimeout(() => {\r\n        dispatch({\r\n          type: \"INCREMENT\",\r\n          payload,\r\n        });\r\n      }, delay);\r\n    };\r\n  },\r\n\r\n  decrementAsync: (payload) => {\r\n    return (dispatch) => {\r\n      setTimeout(() => {\r\n        dispatch({\r\n          type: \"DECREMENT\",\r\n          payload,\r\n        });\r\n      }, delay);\r\n    };\r\n  },\r\n};\r\n\r\nexport default connect(undefined, mapDispatchToProps)(Counter);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nfunction Counter(props) {\r\n  return <div className=\"count-value\">{props.state}</div>;\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    state: state,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Counter);\r\n","import React from \"react\";\r\n\r\nimport { createStore, applyMiddleware, compose } from \"redux\";\r\nimport { Provider } from \"react-redux\";\r\nimport ReduxThunk from \"redux-thunk\";\r\n\r\nimport reducer from \"./reducer\";\r\nimport Counter from \"./Counter\";\r\nimport CounterDisplay from \"./CounterDisplay\";\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducer, composeEnhancers(applyMiddleware(ReduxThunk)));\r\n\r\nexport default function ReduxSagaSM(props) {\r\n  return (\r\n    <Provider store={store}>\r\n      <div>\r\n        <h3 className=\"flex\">{props.title}</h3>\r\n        <div className=\"flex\">\r\n          <Counter />\r\n          <CounterDisplay />\r\n        </div>\r\n      </div>\r\n    </Provider>\r\n  );\r\n}\r\n","export default function reducer(state = 0, action) {\r\n  if (action.type === \"INCREMENT\") {\r\n    return state + (action?.payload ?? 1);\r\n  } else if (action.type === \"DECREMENT\") {\r\n    return state - 1;\r\n  }\r\n  return state;\r\n}\r\n","import { put, takeEvery, all } from \"redux-saga/effects\";\r\n\r\nconst setTimeoutPromise = (ms) => new Promise((res) => setTimeout(res, ms));\r\nconst delay = 1500;\r\n\r\nexport function* incrementAsync({ payload }) {\r\n  yield setTimeoutPromise(delay);\r\n  yield put({ type: \"INCREMENT\", payload });\r\n}\r\n\r\nexport function* decrementAsync({ payload }) {\r\n  yield setTimeoutPromise(delay);\r\n  yield put({ type: \"DECREMENT\", payload });\r\n}\r\n\r\nexport function* watchIncrementAsync() {\r\n  yield takeEvery(\"INCREMENT_ASYNC\", incrementAsync);\r\n}\r\n\r\nexport function* watchDecrementAsync() {\r\n  yield takeEvery(\"DECREMENT_ASYNC\", decrementAsync);\r\n}\r\n\r\nexport default function* rootSaga() {\r\n  yield all([watchIncrementAsync(), watchDecrementAsync()]);\r\n}\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nfunction Counter(props) {\r\n  return (\r\n    <div>\r\n      <button onClick={() => props.increment(1)}>Increment</button>\r\n      <button onClick={() => props.decrement(1)}>Decrement</button>\r\n      <button onClick={() => props.incrementAsync(1)}>Increment Async</button>\r\n      <button onClick={() => props.decrementAsync(1)}>Decrement Async</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  increment: (payload) => {\r\n    return {\r\n      type: \"INCREMENT\",\r\n      payload,\r\n    };\r\n  },\r\n\r\n  decrement: (payload) => {\r\n    return {\r\n      type: \"DECREMENT\",\r\n      payload,\r\n    };\r\n  },\r\n\r\n  incrementAsync: (payload) => {\r\n    return {\r\n      type: \"INCREMENT_ASYNC\",\r\n      payload,\r\n    };\r\n  },\r\n\r\n  decrementAsync: (payload) => {\r\n    return {\r\n      type: \"DECREMENT_ASYNC\",\r\n      payload,\r\n    };\r\n  },\r\n};\r\n\r\nexport default connect(undefined, mapDispatchToProps)(Counter);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nfunction Counter(props) {\r\n  return <div className=\"count-value\">{props.state}</div>;\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    state: state,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Counter);\r\n","import React from \"react\";\r\n\r\nimport { createStore, applyMiddleware, compose } from \"redux\";\r\nimport { Provider } from \"react-redux\";\r\n\r\nimport createSagaMiddleware from \"redux-saga\";\r\nimport rootSaga from \"./saga\";\r\n\r\nimport reducer from \"./reducer\";\r\nimport Counter from \"./Counter\";\r\nimport CounterDisplay from \"./CounterDisplay\";\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducer, composeEnhancers(applyMiddleware(sagaMiddleware)));\r\n\r\nexport default function ReduxSagaSM(props) {\r\n  return (\r\n    <Provider store={store}>\r\n      <div>\r\n        <h3 className=\"flex\">{props.title}</h3>\r\n        <div className=\"flex\">\r\n          <Counter />\r\n          <CounterDisplay />\r\n        </div>\r\n      </div>\r\n    </Provider>\r\n  );\r\n}\r\n\r\nsagaMiddleware.run(rootSaga);\r\n","export default function reducer(state = 0, action) {\r\n  if (action.type === \"INCREMENT\") {\r\n    return state + action.payload;\r\n  } else if (action.type === \"DECREMENT\") {\r\n    return state - action.payload;\r\n  }\r\n  return state;\r\n}\r\n","import { makeAutoObservable } from \"mobx\";\r\n\r\nconst delay = 1500;\r\n\r\nclass CountManager {\r\n  state = 0;\r\n\r\n  constructor() {\r\n    makeAutoObservable(this);\r\n  }\r\n\r\n  increment = () => {\r\n    this.state += 1;\r\n  };\r\n\r\n  decrement = () => {\r\n    this.state -= 1;\r\n  };\r\n\r\n  incrementAsync() {\r\n    setTimeout(this.increment, delay);\r\n  }\r\n\r\n  decrementAsync() {\r\n    setTimeout(this.decrement, delay);\r\n  }\r\n}\r\n\r\nexport default new CountManager();\r\n","import React from \"react\";\r\n\r\nexport default function Counter(props) {\r\n  return (\r\n    <div>\r\n      <button onClick={() => props.increment(1)}>Increment</button>\r\n      <button onClick={() => props.decrement(1)}>Decrement</button>\r\n      <button onClick={() => props.incrementAsync(1)}>Increment Async</button>\r\n      <button onClick={() => props.decrementAsync(1)}>Decrement Async</button>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function Counter(props) {\r\n  return <div className=\"count-value\">{props.state}</div>;\r\n}\r\n","import React from \"react\";\r\nimport { observer } from \"mobx-react\";\r\n\r\nimport countManager from \"./countManager\";\r\nimport Counter from \"./Counter\";\r\nimport CounterDisplay from \"./CounterDisplay\";\r\n\r\nconst CounterView = observer(({ countManager }) => (\r\n  <div className=\"flex\">\r\n    <Counter\r\n      increment={countManager.increment}\r\n      decrement={countManager.decrement}\r\n      incrementAsync={countManager.incrementAsync}\r\n      decrementAsync={countManager.decrementAsync}\r\n    />\r\n    <CounterDisplay state={countManager.state} />\r\n  </div>\r\n));\r\n\r\nexport default function MobXSM(props) {\r\n  return (\r\n    <div>\r\n      <h3 className=\"flex\">{props.title}</h3>\r\n      <CounterView countManager={countManager} />\r\n    </div>\r\n  );\r\n}\r\n","import { BehaviorSubject } from \"rxjs\";\r\n\r\nlet state = 0;\r\nconst delay = 1500;\r\nconst subject = new BehaviorSubject(state);\r\n\r\nsubject.subscribe((value) => {\r\n  state = value;\r\n});\r\n\r\nconst increment = (value) => {\r\n  subject.next(state + value);\r\n};\r\n\r\nconst decrement = (value) => {\r\n  subject.next(state - value);\r\n};\r\n\r\nconst incrementAsync = (value) => {\r\n  setTimeout(increment, delay, value);\r\n};\r\n\r\nconst decrementAsync = (value) => {\r\n  setTimeout(decrement, delay, value);\r\n};\r\n\r\nexport { subject, increment, decrement, incrementAsync, decrementAsync };\r\n","import React from \"react\";\r\n\r\nimport { increment, decrement, incrementAsync, decrementAsync } from \"./useCounter\";\r\n\r\nexport default function Counter(props) {\r\n  return (\r\n    <div>\r\n      <button onClick={() => increment(1)}>Increment</button>\r\n      <button onClick={() => decrement(1)}>Decrement</button>\r\n      <button onClick={() => incrementAsync(1)}>Increment Async</button>\r\n      <button onClick={() => decrementAsync(1)}>Decrement Async</button>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nimport { subject } from \"./useCounter\";\r\n\r\nexport default function Counter(props) {\r\n  const [state, setState] = useState(0);\r\n\r\n  useEffect(() => {\r\n    const subscriber = subject.subscribe((state) => {\r\n      setState(state);\r\n    });\r\n\r\n    return () => {\r\n      subscriber.unsubscribe();\r\n    };\r\n  });\r\n\r\n  return <div className=\"count-value\">{state}</div>;\r\n}\r\n","import React from \"react\";\r\n\r\nimport Counter from \"./Counter\";\r\nimport CounterDisplay from \"./CounterDisplay\";\r\n\r\nexport default function RxJSSM(props) {\r\n  return (\r\n    <div>\r\n      <h3 className=\"flex\">{props.title}</h3>\r\n      <div className=\"flex\">\r\n        <Counter />\r\n        <CounterDisplay />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\nimport \"./App.css\";\n\nimport PureReactSM from \"./PureReactSM/PureReactSM\";\nimport CustomHooksSM from \"./CustomHooksSM/CustomHooksSM\";\nimport ReduxThunkSM from \"./ReduxThunkSM/ReduxThunkSM\";\nimport ReduxSagaSM from \"./ReduxSagaSM/ReduxSagaSM\";\nimport MobXSM from \"./MobXSM/MobXSM\";\nimport RxJSSM from \"./RxJSSM/RxJSSM\";\n\nfunction App(props) {\n  return (\n    <div className=\"app\">\n      <h2>Different ways of managing state in React JS</h2>\n      <PureReactSM title=\"Pure React State Management\" />\n      <CustomHooksSM title=\"React Hooks State Management\" />\n      <ReduxThunkSM title=\"Redux Thunk State Management\" />\n      <ReduxSagaSM title=\"Redux Saga State Management\" />\n      <RxJSSM title=\"RxJS State Management\" />\n      <MobXSM title=\"MobX State Management\" />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}